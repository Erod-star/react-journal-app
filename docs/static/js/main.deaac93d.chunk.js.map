{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","e","console","log","message","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","isFormValid","trim","lenght","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","NotesAppBar","moment","format","style","display","files","text","allowOutsideClick","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalEntry","date","nodeDate","backgroundSize","backgroundImage","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","docRef","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.deaac93d.chunk.js","sourcesContent":["\r\n//Archivo que gestiona el tipo de elemento que se manda a los reducers\r\nexport const types = {\r\n\r\n    //Types para el authReducer\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    //Types para el ui.Reducer\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    //Types para el notesReducer\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLoadoutCleaning: '[Notes]  LogoutCleaning',\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n};  \r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload,\r\n                }\r\n            };\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ],\r\n            };\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ],\r\n            };\r\n            \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                ),\r\n            };\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            };\r\n\r\n        case types.notesLoadoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            };\r\n\r\n        default:\r\n            return(state);\r\n    };\r\n};","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null,\r\n};\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    \r\n    switch (action.type) {\r\n\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n            \r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true,\r\n            }\r\n    \r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    };\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\r\n//El store principal de mi redux, que contiene todos los reducers implementados\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\n//Reducer para validaciones del login\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n    \r\n        case types.logout:\r\n            return{ };\r\n\r\n        default:\r\n            return state;\r\n    };\r\n\r\n};","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Configuraciones del firebase para dentro de la app\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCJzcKjIhH-0krQRXBvla2VXffL5m4ko50\",\r\n    authDomain: \"react-app-curso-3ac46.firebaseapp.com\",\r\n    projectId: \"react-app-curso-3ac46\",\r\n    storageBucket: \"react-app-curso-3ac46.appspot.com\",\r\n    messagingSenderId: \"348923846089\",\r\n    appId: \"1:348923846089:web:f430d176963de45d105c18\"\r\n  };\r\n\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  };","\r\n\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/diitmcgzf/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } \r\n        else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n\r\n};","import { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    \r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        });\r\n    });\r\n\r\n    return notes;\r\n};","import Swal from 'sweetalert2';\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from '../types/types';\r\n\r\n//Acción encargada de la autenticación del Login personalizada \r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {   // getState - función que permite acceder al state sin necesidad de utilizar el useSelector\r\n\r\n        const uid = getState().auth.uid;\r\n        \r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime(),\r\n        };\r\n\r\n        const docRef = await db.collection(`${ uid }/journal/notes`).add( newNote )\r\n\r\n        dispatch( activeNote( docRef.id, newNote ) );\r\n        dispatch( addNewNote( docRef.id, newNote) );\r\n    };\r\n};\r\n\r\n\r\n// Acción para declarar una nota activa\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\n\r\n// Añade una nueva nota\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\n\r\n//Acción que inicia la carga de las notas que tiene un usuario a partir de un uid\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n        \r\n    };\r\n};\r\n\r\n\r\n//Acción encargada de establecer las notas a traves de un id dado\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n\r\n// Acción para guardar una nota en la base de datos de firestore\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if( !note.url ){\r\n            delete note.url\r\n        };\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`/${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n        \r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n        Swal.fire('Saved', note.title, 'success');\r\n    };\r\n};\r\n\r\n\r\n// Acción que actualiza del store a la nota que en ese momento esta cambiando \r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload:{\r\n        id,\r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\n\r\n// Acción para subir una imagen a Cloudinary\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n        \r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n        });\r\n        \r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) );\r\n\r\n        Swal.close();\r\n    };\r\n};\r\n\r\n\r\n// Acción para eliminar una nota desde la base de datos de firestore\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n        \r\n        const { uid } = getState().auth;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n        \r\n        //A través de la función de abajo también se elimina en el sitio web del proyecto\r\n        dispatch( deleteNote( id ) );\r\n        \r\n    }\r\n};\r\n\r\n\r\n// Acción para eliminar una nota \r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\n\r\n// Acción que depura las notas cuando un usuario hace un logout\r\nexport const noteLogout = () => ({\r\n    type: types.notesLoadoutCleaning\r\n});","import { types } from '../types/types';\r\n\r\n\r\n//Acción encargada validaciones dentro de la pantalla de registros en caso de error (setea el error).\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\n\r\n//Acción encargada validaciones dentro de la pantalla de registros en caso de error (remueve en caso de error).\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\n\r\n// Acción encargada de las validaciones de carga a través del Login (inicia la carga).\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\n\r\n// Acción encargada de las validaciones de carga a través del Login (termina la carga).\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\n\r\n//Acción encargada de la autenticación del Login personalizada\r\nexport const startLoginEmailPassword = (email, password) => {  \r\n    return (dispatch) => {\r\n        \r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({ user }) => {\r\n                dispatch( \r\n                    login(user.uid, user.displayName) );\r\n                \r\n                dispatch(finishLoading());\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    };\r\n};\r\n\r\n\r\n//Acción encargada de la autenticación del registro\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => { \r\n    return(dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name }); //retorna un objeto con el nombre y fotografía del usuario\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    };\r\n};\r\n\r\n\r\n//Acción encargada de la autenticación del registro por medio de Google Accounts\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n            });\r\n    };\r\n};\r\n\r\n//El type \"Login\" del authReducer\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\n//El type \"Logout\" del authReducer\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n});\r\n\r\n//Acción encargada del Logout del usuario\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    };\r\n};","import { useState } from \"react\";\r\n\r\n// Hook personalizado para el uso de formularios que recibe los valores en forma de objeto,\r\n// para posteriormente ejecutarlos en este.\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues(newFormState);\r\n    };\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        \r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value,\r\n        });\r\n\r\n    };\r\n\r\n    return [ values, handleInputChange, reset ];\r\n};","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    // Exportación del dispatch desde react-reducer\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n    // Declaración de mi Hook personalizado\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'edsini@gmail.com',\r\n        password: '123456',\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    // Función para hacer un login personalizado\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLoginEmailPassword(email, password) );\r\n    };\r\n\r\n    // Función para hacer un login desde Google Accounts\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p> Login with social networks! </p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>  \r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport validator from 'validator';\r\n\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    // Exportación del dispatch desde react-reducer\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    // Declaración de mi Hook personalizado\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Edson Govea',\r\n        email: 'edsini@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n     // Función para hacer un registro personalizado\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid()){\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n        }\r\n    };\r\n\r\n     // Función para validar que la información dada por el usuario sea correcta\r\n     // interacciones con el uiReducer.js\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().lenght === 0 ){\r\n\r\n            dispatch( setError('Name is required') );\r\n            return false;\r\n\r\n        } else if ( !validator.isEmail( email ) ){\r\n\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n\r\n        } else if ( password !== password2 || password.lenght < 5 ){\r\n            \r\n            dispatch( setError('Password should be at least 6 characters and the passwords must match') );\r\n            return false;\r\n\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={ handleRegister } \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                \r\n                {\r\n                    msgError &&\r\n                    (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                    )\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>  \r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\n//Router de navegación restringido para las pantallas del \"Login\" y \"Register\"\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n\r\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>  \r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    // Función para guardar los cambios de una nota\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    };\r\n\r\n    //Función para cargar una imagen a una nota\r\n    const handlePictureUpload = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ moment().format('MMMM Do YYYY')}</span>\r\n\r\n        {/* Tipo de input para subida de archivos (escondido para el usuario) */}\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                \r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureUpload }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector( state => state.notes );\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, id } = formValues;\r\n\r\n    // Cambiar la nota activa al cambiar la selección por medio de un efecto e implementando el useRef\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if ( note.id !== activeId.current ){\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [ note, reset ]);\r\n\r\n    //Efecto encargado de actualizar el state con la correspondiente información de los formularios en tiempo real\r\n    useEffect(() => {\r\n       \r\n        dispatch( activeNote( formValues.id, { ...formValues }) );\r\n\r\n    }, [ formValues, dispatch ]);\r\n\r\n    //Fución encargada de eliminar una nota\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n              \r\n                    <input \r\n                        type=\"text\"\r\n                        placeholder=\"Some awesome title\"\r\n                        className=\"notes__title-input\"\r\n                        autoComplete=\"off\"\r\n                        name=\"title\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n\r\n                    <textarea\r\n                        placeholder=\"Today I did something awesome...\"\r\n                        className=\"notes__textarea\"\r\n                        name=\"body\"\r\n                        value={ body }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n\r\n                    {\r\n                        (note.url)\r\n                        && (\r\n                            <div className=\"notes__image\">\r\n                                <img\r\n                                    src={ note.url }\r\n                                    alt=\"Elemento\"\r\n                                />\r\n                            </div>)\r\n                    }\r\n\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete note\r\n            </button>\r\n\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create an entry :D\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i> {/* Elemento del Font-Awesome*/}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({  id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Aplicación de la libreria \"Moment.js\" que ayuda a la manipulación de fechas\r\n    const nodeDate = moment(date);\r\n\r\n    // Función que dispara la acción para abrir la nota seleccionada en la parte del Sidebar\r\n    const handleEntryCilck = () => {\r\n        dispatch( activeNote(id, {\r\n                date, title, body, url\r\n            }) \r\n        );\r\n    };\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryCilck }\r\n        >\r\n            \r\n            {\r\n                url &&\r\n\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                >\r\n                </div>\r\n            }    \r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span> { nodeDate.format('dddd') } </span>\r\n                <h4> { nodeDate.format('Do') } </h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const { notes } = useSelector(state => state.notes )\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    //Obtención del nombre del usuario que accedio a la JournalScreen desde el store\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    //Configuración del Logout\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    };\r\n\r\n    // Función para añadir una nueva nota con interacciones en la base de datos de firestore\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    };\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i> {/* Elementos del Font-Awesome - CDN */}\r\n                    <span> { name }</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes );\r\n    return (\r\n        <div \r\n            className=\"journal_main-content animate__animated animate__fadeIn animate__faster\"\r\n        >\r\n\r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    ( active )\r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected /> )\r\n                }\r\n            \r\n            </main>\r\n\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component {...props} /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component {...props} /> )\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from 'react-router-dom';\r\n  \r\n  import { firebase } from '../firebase/firebase-config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\n// Router de navegación principal entre las pantallas de \"Inicio de sesión\" y la pantalla \"Journal\"\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //setStates que identifica a que ruta se mandara el usuario dependiendo de si esta autenticado o no\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n\r\n\r\n    //Efecto que asegura la autenticación del usuario al refrescar la página o cambiar de vista\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n\r\n            if( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            } else {\r\n                setIsLoggedIn( false );\r\n            };\r\n\r\n            setChecking(false);\r\n\r\n        });\r\n\r\n    }, [ dispatch, setChecking ]);\r\n\r\n    if ( checking ){\r\n        return(\r\n            <h1> Loading... </h1>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <div>  \r\n                <Switch>\r\n\r\n                    {/* Ruta pública */}\r\n                    <PublicRoute \r\n                        path=\"/auth\" \r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn } \r\n                        \r\n                    />\r\n                    \r\n                    {/* Ruta privada */}\r\n                    <PrivateRoute\r\n                        exact path=\"/\" \r\n                        component={ JournalScreen }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n// Página principal de la aplicación\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}